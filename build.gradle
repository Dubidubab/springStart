//plugins {
//    id 'java'
//}

buildscript {
    // build.gradle에서 사용하는 전역변수를 설정하겠다는 의미
    ext {
        //springBootVersion 전역변수를 생성하고 그값으로 '2.1.9.RELEASE'로 하겠다는 의미
        springBootVersion = '2.1.9.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
//io.spring.dependency-management플러그인은 스프링 부트의 의존성들을 관리해주 주는 플러그인이라 꼭 추가해야 한다.
apply plugin: 'io.spring.dependency-management'

group 'org.example'
version '1.0-SNAPSHOT'

// 각종 의존성 들을 어떤 원격저장소에서 받을지 정하는것. 기본적으로 mavenCentral을 많이 사용하지만
// 최근 라이브러리 업로드 난이도 때문에 jcenter도 많이 사용한다.
repositories {
    mavenCentral()
    jcenter()
}

// 프로젝트 개발에 필요한 의존성들을 선언하는 곳
// 주의) 특정 버전을 명시하면 안된다. -> ${springBootVersion} 때문
dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    testCompile('org.springframework.boot:spring-boot-starter-test')

//    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
//    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

test {
    useJUnitPlatform()
}